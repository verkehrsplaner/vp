/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.vp;

import java.nio.file.Path;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Hecker & Maxi
 */
public class MenuGUI extends JDialog {

    private Sound sound;
    private SpielPanel panel;
    Spielsteuerung strg;

    /**
     * Creates new form EinstellungsGUI
     */
    public MenuGUI(Sound s, SpielPanel p, Spielsteuerung ss) {
        sound = s;
        panel = p;
        strg = ss;
        initComponents();

        ImageIcon icon = new ImageIcon(getClass().getResource("images/icon.png"));
        setIconImage(icon.getImage());
        boolean pause = strg.getPause();
        if (pause == true) {
           
           spielPause.setIcon(new ImageIcon(getClass().getResource("images/play.png")));
        } else {
           
           spielPause.setIcon(new ImageIcon(getClass().getResource("images/pause.png")));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hMusik = new javax.swing.JCheckBox();
        soundeffekte = new javax.swing.JCheckBox();
        Menü = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        spielBeenden = new javax.swing.JButton();
        spielSpeichern = new javax.swing.JButton();
        blinken = new javax.swing.JCheckBox();
        hAtmo = new javax.swing.JCheckBox();
        spielPause = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menü");
        setAlwaysOnTop(true);
        setMinimumSize(getPreferredSize());
        setResizable(false);

        hMusik.setSelected(sound.getMusikAn());
        hMusik.setText("Hintergrundmusik");
        hMusik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hMusikActionPerformed(evt);
            }
        });

        soundeffekte.setText("Soundeffekte");
        soundeffekte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundeffekteActionPerformed(evt);
            }
        });

        Menü.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Menü.setText("Menü");

        spielBeenden.setText("Spiel beenden");
        spielBeenden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spielBeendenActionPerformed(evt);
            }
        });

        spielSpeichern.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/vp/images/speichern transparent.png"))); // NOI18N
        spielSpeichern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spielSpeichernActionPerformed(evt);
            }
        });

        blinken.setSelected(panel.getBlinken());
        blinken.setText("Nicht versorgte Bahnhöfe blinken");
        blinken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blinkenActionPerformed(evt);
            }
        });

        hAtmo.setSelected(sound.getAtmoAn());
        hAtmo.setText("Atmosphäre");
        hAtmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hAtmoActionPerformed(evt);
            }
        });

        spielPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/vp/images/pause.png"))); // NOI18N
        spielPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spielPauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(Menü)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spielPause, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(spielSpeichern, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(spielBeenden, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hAtmo)
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(hMusik)
                        .addComponent(soundeffekte)
                        .addComponent(blinken)))
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Menü)
                .addGap(64, 64, 64)
                .addComponent(hAtmo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hMusik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(soundeffekte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(blinken)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spielSpeichern, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spielBeenden, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spielPause, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void soundeffekteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundeffekteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_soundeffekteActionPerformed

    /**
     * Zuerst wird mit Hilfe eines JOptionPane überprüft, ob das Spiel wirklich beendet werden soll. Falls hier "Ja" ausgewählt wird, wird das Spiel beendet
     *
     * @param evt
     */
    private void spielBeendenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spielBeendenActionPerformed
        Object[] options = {"Abbrechen", "Nein", "Ja"};
        int s = JOptionPane.showOptionDialog(this, "Möchtest du das Spiel vor dem Beenden speichern?", "Spiel Speichern",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                null, options, options[0]);
         System.out.println(s);
        if (s == 1) {
            System.exit(0);
        }
        else if (s == 0) {
            
        }
        else if (s == 2) {
            speichern();
        }
    }//GEN-LAST:event_spielBeendenActionPerformed

    /**
     * 
     * Speichert das aktuelle Spiel und beendet es
     */
    private void speichern() {
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            Path file = fc.getSelectedFile().toPath();
            strg.speichern(file);
            this.dispose();
        }
        else if (returnVal == JFileChooser.CANCEL_OPTION) {
            System.exit(0);
        }
        
    }
    
    /**
     * Das Spiel kann unter einem beliebigen Pfad gespeichert werden
     *
     * @param evt
     */
    private void spielSpeichernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spielSpeichernActionPerformed
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            Path file = fc.getSelectedFile().toPath();
            strg.speichern(file);
            this.dispose();
        }
        
    }//GEN-LAST:event_spielSpeichernActionPerformed

    /**
     * Musik wird in der Klasse Sound an oder aus gestellt
     * 
     * @param evt
     */
    private void hMusikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hMusikActionPerformed
        if (hMusik.isSelected() == true) {
            sound.musikAn();
        } else {
            sound.musikAus();
        }
    }//GEN-LAST:event_hMusikActionPerformed

    /**
     * Das Blinken der nicht-verbundenen Häuser kann hier aktiviert oder deaktiviert werden
     * 
     * @param evt 
     */
    private void blinkenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blinkenActionPerformed
        if (blinken.isSelected() == true) {
            panel.setBlinken(true);
        } else {
            panel.setBlinken(false);
        }
    }//GEN-LAST:event_blinkenActionPerformed

    /**
     * Atmosphäre Sounds werden in der Klasse Sound an oder aus gestellt
     * 
     * @param evt 
     */
    private void hAtmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hAtmoActionPerformed
        if (hAtmo.isSelected() == true) {
            sound.atmoAn();
        } else {
            sound.atmoAus();
        }
    }//GEN-LAST:event_hAtmoActionPerformed

    private void spielPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spielPauseActionPerformed
        if(strg.getPause()) {
            strg.setPause(false);
            spielPause.setIcon(new ImageIcon(getClass().getResource("images/pause.png")));
        }
        else {
            strg.setPause(true);
            spielPause.setIcon(new ImageIcon(getClass().getResource("images/play.png")));
            
        }
    }//GEN-LAST:event_spielPauseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Menü;
    public javax.swing.JCheckBox blinken;
    private javax.swing.JCheckBox hAtmo;
    private javax.swing.JCheckBox hMusik;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox soundeffekte;
    private javax.swing.JButton spielBeenden;
    private javax.swing.JButton spielPause;
    private javax.swing.JButton spielSpeichern;
    // End of variables declaration//GEN-END:variables
}
