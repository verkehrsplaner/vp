/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.vp;

import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author Felix
 */
public class TickerPanel extends javax.swing.JPanel implements Runnable {

    private boolean run;
    private int breite, pos, textlaenge, y;
    private String text;
    private Font font;
    private final String trenn = "   +++   ";
    private final String[] nachrichten = {
        "Sinn im Unsinn entdeckt!",
        "Dackel Waldi ist tot!",
        "In China ist ein Sack Reis umgefallen!",
        "Igor der Schreckliche, König von Lampukistan dankt ab!",
        "Sport ist Mord: Neue Studie erschüttert Welt!",
        "Augenarzt verändert Weltanschauung: Viereckige Augen gibt es nicht!",
        "Zombieangriffe schockieren Randbezirke!",
        "Langzeitstudie: Planeten können durchschnittlich älter werden als Mensch!",
        "Neue Farbe entdeckt: Lila-blassblau!",
        "Dies ist ein News-Ticker!",
        "Haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaallo!",
        "Wer hat den Keks aus der Dose geklaut?",
        "Hier könnte ihre Werbung stehen!",
        "Hecker hat nen kleinen!",
        "!",
        "Wer hat an der Uhr gedreht?"};

    public TickerPanel() {
        text = "Bürgermeister eröffnet feierlich neue Stadtwerke!";
        font = this.getFont();
        getPixel();
    }

    public void getPixel() {
        breite = this.getWidth();
        pos = breite;
    }

    @Override
    public void run() {
        run = true;
        while (run) {
            try {
                this.repaint();
                Thread.sleep(40);
            } catch (InterruptedException ex) {
                System.out.println("Timer unterbrochen!");
            }
        }
    }

    public void stop() {
        run = false;
    }

    @Override
    protected void paintComponent(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;

        // Daten sammeln
        FontMetrics fm = g2d.getFontMetrics(font);
        y = (this.getHeight() + fm.getAscent() + fm.getDescent()) / 2;
        textlaenge = fm.stringWidth(text);
        breite = this.getWidth();

        g2d.drawString(text, pos, y);
        pos = pos - 2;

        // Text verlängern, wenn nötig
        if (pos + textlaenge < breite + 20) {
            neuerText();
        }

        // Text vorne kürzen, wenn außerhalb des Sichtfeldes
        if (pos < -20) {
            pos = pos + fm.stringWidth(text.substring(0, 1));
            text = text.substring(1);
        }
    }

    private void neuerText() {
        text = text + trenn + nachrichten[(int) Math.round(Math.random() * (nachrichten.length - 1))];
    }

    public void neueNachricht(String n) {
        text = text + trenn + n;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
